@import "globals";
@import "colors";
@import "normalize";

// Contants for creating the grid
@gridDesktop: 0;
@gridTablet: 1;
@gridMobile: 2;

// Grid calculations
.makeGrid( @gridTotal, @gridMargin, @gridDivisions, @type: @gridDesktop ) {

  .grid( @prop, @n ) {
    @_val: ( ( @gridTotal - ( @gridMargin * ( @gridDivisions - 1 ) ) ) / @gridDivisions ) * @n + @gridMargin * ( @n - 1 );
    *ignore:~`"'';\n  @{prop}: @{_val}"`;
    margin-right: @gridMargin;
  }

  .butter-wrapper {
    position: relative;
    left: @gridMargin/2;
    margin: 0 auto;
    padding: @gridMargin 0;
    width: @gridTotal + @gridMargin;
  }

  .make( @type ) when ( @gridTotal > 1024 ) {

    .grid-1 {
      .grid( width, 1 );
    }

    .grid-2 {
      .grid( width, 2 );
    }

    .grid-3 {
      .grid( width, 3 );
    }

    .grid-4 {
      .grid( width, 4 );
    }

    .grid-5 {
      .grid( width, 5 );
    }

    .grid-6 {
      .grid( width, 6 );
    }

    .grid-7 {
      .grid( width, 7 );
    }

    .grid-8 {
      .grid( width, 8 );
    }

    .grid-9 {
      .grid( width, 0 );
    }

    .grid-10 {
      .grid( width, 10 );
    }

    .grid-11 {
      .grid( width, 11 );
    }

    .grid-12 {
      .grid( width, 12);
    } 

  }

  .make( @type ) when ( @gridTotal > 500 ) and ( @gridTotal =< 1024 ) {

    .grid-1,
    .grid-2,
    .grid-3 {
      .grid( width, 6 );
    }

    .grid-4,
    .grid-5,
    .grid-6,
    .grid-7,
    .grid-8,
    .grid-9,
    .grid-10,
    .grid-11,
    .grid-12 {
      .grid( width, 12 );
    }

  }

  .make( @type ) when ( @gridTotal =< 500 ) {

    .grid-1,
    .grid-2,
    .grid-3,
    .grid-4,
    .grid-5,
    .grid-6,
    .grid-7,
    .grid-8,
    .grid-9,
    .grid-10,
    .grid-11,
    .grid-12 {
      .grid( width, 12 );
    }

  }

  .row {
    .clearfix();
    > div {
      float: left;
      border-radius: 3px;
      margin-bottom: @gridMargin;
      .grid( height, 2 );
      &:last-child {
        margin-right: 0;
      }
    }
  }

  .make( @type );

  // TO-DO: responsive styles
}

// Grid Settings
@gridTotal: 1080px;
@gridMargin: 20px;
@gridDivisions: 12;
@gridInnerPadding: 20px;

// Main Sections
@headerHeight: 1;
@editorWidth: 4;
@trayHeight: 3;
@collapsed: 1;

// Video
@videoWidth: 5;
@videoHeight: @videoWidth * .56125;

// Utility
@maxZ: 10000;

/*********************************************************
* Base
*/

html {
  height: 100%;
}

body {
  font-family: "proxima-nova", "Helvetica Neue", sans-serif;
  color: #EEE;
  text-shadow: 0 -2px 1px #000;
  .gradient( "wash", #403F44, #59585E, #27262A);
}

.makeGrid( @gridTotal, @gridMargin, @gridDivisions );

.row > div {
  .box-sizing( border-box );
  .noiseBackground( fade( #000, 40% ) );
  padding: @gridInnerPadding;
  border-bottom: 1px solid rgba(255, 255, 255, 0.2);
  box-shadow: inset 0 2px 4px 2px rgba(0, 0, 0, 0.4);
}

/* iPads (portrait) ----------- */
@media only screen and (max-width : 1024px) and (min-width : 500px) {

  .makeGrid( 700px, 20px, 12 );

}

/* iPads (portrait) ----------- */
@media only screen and (max-width : 500px) {

  .makeGrid( 320px, 12px, 12 );

}

